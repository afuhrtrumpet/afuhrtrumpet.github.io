<!DOCTYPE html>
<html>
<head>
<meta charset = "utf-8">
<title>Alex Fuhr's Portfolio</title>
<link href = "jquery-ui-1.10.3.custom.css" rel = "stylesheet" type = "text/css">
<link href='http://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.2/jquery.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js"></script>
<script src="lightbox/js/lightbox-2.6.min.js"></script>
<link href="lightbox/css/lightbox.css" rel="stylesheet" />
<script>
$(document).ready(function() {
	//GET BROWSER WINDOW HEIGHT
	var currHeight = $(window).height();
	//SET HEIGHT OF SIDEBAR AND CONTENT ELEMENTS
	$('#sidebar, #content').css('height', currHeight);
	//ON RESIZE OF WINDOW
	$(window).resize(function() {
		//GET NEW HEIGHT
		var currHeight = $(window).height();
		//RESIZE BOTH ELEMENTS
		$('#sidebar, #content').css('height', currHeight);
	});
	$('#tabs').tabs();
	$('.accordion').accordion({
		heightStyle: "content",
		collapsible: true
	});
	$('#name').mouseenter(function() {
		$('#engineer').fadeTo('fast', 1);
		eActive = true;
		$('#programmer').fadeTo('fast', 1);
		pActive = true;
		$('#musician').fadeTo('fast', 1);
		mActive = true;
		$('#leader').fadeTo('fast', 1);
		lActive = true;
	}).mouseleave(function() {
		$('#engineer').fadeTo('fast', .5);
		eActive = false;
		$('#programmer').fadeTo('fast', .5);
		pActive = false;
		$('#musician').fadeTo('fast', .5);
		mActive = false;
		$('#leader').fadeTo('fast', .5);
		lActive = false;
	});
	$('.hoverTile').mouseenter(function() {
		$(this).fadeTo('fast', 1);
		var id = this.getAttribute("id");
		if (id == "engineer") eActive = true;
		else if (id == "programmer") pActive = true;
		else if (id == "musician") mActive = true;
		else if (id == "leader") lActive = true;
	}).mouseleave(function() {
		$(this).fadeTo('fast', .5);
		var id = this.getAttribute("id");
		if (id == "engineer") eActive = false;
		else if (id == "programmer") pActive = false;
		else if (id == "musician") mActive = false;
		else if (id == "leader") lActive = false;
	});
	draw();
});
var eActive = false;
var pActive = false;
var mActive = false;
var lActive = false;
var timer;
var mNoteX = 0;
var mNoteOgX = 55;
var mNoteY = 0;
var mNoteOgY =  75;
var mNoteRotatedX;
var mNoteRotatedY;
var mAngle = -.698;
var dx = 5;
var cursor = 0;
var pOne = "console.";
var pTwo = 'log("He';
var pThree = "llo Wor";
var pFour = 'ld!");';
var textIndex = (pOne.length + pTwo.length + pThree.length + pFour.length) * 3;
var lastText = "";
var lastLine = 0;
var tpt = new Image();
tpt.src = "images/Trumpet-icon-half.png";
var mNote = new Image();
mNote.src = "images/note0.png";
var circuitIndex = 0;
var circuitImages = new Array();
for (var i = 0; i < 4; i++) {
	circuitImages[i] = new Image();
	circuitImages[i].src = "images/engineer" + (i + 1) + ".png";
}
var leaderImages = new Array();
for (var i = 0; i < 3; i++) {
	leaderImages[i] = new Image();
	leaderImages[i].src = "images/leader" + (i + 1) + ".png";
}
var switchTime = 10;
var switchPosition = false;
var talking = true;
var talkTime = 10;
var leaderIndex = 0;
function drawBorder(ctx, txt) {
	ctx.fillText(txt, 20, 20);
	ctx.beginPath();
	ctx.moveTo(ctx.measureText(txt).width + 25, 15);
	ctx.lineTo(135, 15);
	ctx.arcTo(145, 15, 145, 25, 10);
	ctx.lineTo(145, 185);
	ctx.arcTo(145, 195, 135, 195, 10);
	ctx.lineTo(15, 195);
	ctx.arcTo(5, 195, 5, 185, 10);
	ctx.lineTo(5, 25);
	ctx.arcTo(5, 15, 15, 15, 10);
	ctx.lineTo(15, 15);
	ctx.stroke();
}
function draw() {
	//Green canvas
	var eCanvas = document.getElementById("engineer");
	var eCtx = eCanvas.getContext("2d");
	eCtx.font = "20px Arial";
	eCtx.fillStyle = "#060";
	var eTxt = "Engineer";
	eCtx.clearRect(0, 0, eCanvas.width, eCanvas.height);
	//Blue canvas
	var pCanvas = document.getElementById("programmer");
	var pCtx = pCanvas.getContext("2d");
	pCtx.font = "20px Arial";
	pCtx.fillStyle = "#004";
	var pTxt = "Programmer";
	pCtx.clearRect(0, 0, pCanvas.width, pCanvas.height);
	//Red canvas
	var mCanvas = document.getElementById("musician");
	var mCtx = mCanvas.getContext("2d");
	mCtx.font = "20px Arial";
	mCtx.fillStyle = "#600";
	var mTxt = "Musician";
	mCtx.clearRect(0, 0, mCanvas.width, mCanvas.height);
	//Yellow canvas
	var lCanvas = document.getElementById("leader");
	var lCtx = lCanvas.getContext("2d");
	lCtx.font = "20px Arial";
	lCtx.fillStyle = "#660";
	var lTxt = "Leader";
	lCtx.clearRect(0, 0, lCanvas.width, lCanvas.height);
	//Drawing borders
	drawBorder(eCtx, eTxt);
	drawBorder(pCtx, pTxt);
	drawBorder(mCtx, mTxt);
	drawBorder(lCtx, lTxt);
	//Programming text logic
	pCtx.font = "25px Inconsolata";
	if (textIndex >= 9) {
	if (textIndex >= 9 + 3 * (pOne.length + pTwo.length + pThree.length)) {
		if (textIndex < 9 + 3 * (pOne.length + pTwo.length + pThree.length + pFour.length - 1)) lastText = pFour.substring(0, (textIndex - 9 - (pOne.length + pTwo.length + pThree.length) * 3) / 3);
			else lastText = pFour;
			pCtx.fillText(pOne, 15, 50);
			pCtx.fillText(pTwo, 15, 75);
			pCtx.fillText(pThree, 15, 100);
			lastLine = 3;
		}
		else if (textIndex >= 9 + 3 * (pOne.length + pTwo.length)) {
			if (textIndex < 9 + 3 * (pOne.length + pTwo.length + pThree.length  - 1)) lastText = pThree.substring(0, (textIndex - 9 - (pOne.length + pTwo.length) * 3) / 3);
			else lastText = pThree;
			pCtx.fillText(pOne, 15, 50);
			pCtx.fillText(pTwo, 15, 75);
			lastLine = 2;
		}
		else if (textIndex >= 9 + 3 * pOne.length) {
			if (textIndex < 9 + 3 * (pOne.length + pTwo.length  - 1)) lastText = pTwo.substring(0, (textIndex - 9 - pOne.length * 3) / 3);
			else lastText = pTwo;
			pCtx.fillText(pOne, 15, 50);
			lastLine = 1;
		}
		else if (textIndex < 9 + 3 * (pOne.length  - 1))lastText = pOne.substring(0, (textIndex - 9) / 3);
		else lastText = pOne;
		pCtx.fillText(lastText, 15, 50 + lastLine * 25);
	}
	pCtx.fillStyle = "#4FF";
	if (cursor < 3) {
		pCtx.fillText("|", 15 + pCtx.measureText(lastText).width, 50 + lastLine * 25);
	}
	if (pActive) {
		textIndex++;
		textIndex %= 9 + (pOne.length + pTwo.length + pThree.length + pFour.length) * 3;
		if (textIndex == 0)  {
			lastText = "";
			lastLine = 0;
		}
		cursor++;
		cursor %= 6;
	}
	//Music note logic
	mCtx.drawImage(mNote, mNoteRotatedX + mNoteOgX, mNoteRotatedY + mNoteOgY);
	if (mActive) {
		mNoteX += dx;
		mNoteY = 25 * Math.sin(mNoteX / 10);
		if (mNoteX + mNoteOgX > mCanvas.width) {
			mNoteX = 0;
			mNoteY = 0;
		}
		mNoteRotatedX = mNoteX * Math.cos(mAngle) - mNoteY * Math.sin(mAngle);
		mNoteRotatedY = mNoteX * Math.sin(mAngle) + mNoteY * Math.cos(mAngle);
	}
	mCtx.drawImage(tpt, -30, 75);
	//Circuit logic
	if (circuitIndex % 14 == 0 && eActive) switchPosition = !switchPosition;
	var circuitImage = circuitImages[(switchPosition ? 2 : 0) + (circuitIndex % 4 == 0 || circuitIndex % 4 == 1 ? 0 : 1)];
	if (eActive) circuitIndex++;
	eCtx.drawImage(circuitImage, 10, 15);
	//Leader logic
	if (leaderIndex % 14 == 0 && lActive) talking = !talking;
	var leaderImage = leaderImages[(leaderIndex % 4 == 0 || leaderIndex % 4 == 1) ? (talking ? 1 : 2) : 0];
	if (lActive) leaderIndex++;
	lCtx.drawImage(leaderImage, 20, 25);
	timer = setTimeout(draw, 50);
	
}
</script>
<base target="_blank">
</head>
<body>
<div id = "sidebar">
	<canvas id = "engineer" class = "hoverTile" width = 150px height = 200px></canvas><canvas id = "programmer" class = "hoverTile" width = 150px height = 200px></canvas>
	<div id = "name"></div>
	<canvas id = "musician" class = "hoverTile" width = 150px height = 200px></canvas><canvas id = "leader" class = "hoverTile" width = 150px height = 200px></canvas><br>
	Hello, and thank you for visiting my website! This website is intended to serve as a portfolio for my projects and skills. If you would like to learn more, click the link below to visit my LinkedIn profile:<br>
	<a href="http://www.linkedin.com/in/alexfuhr">
         <img src="http://www.linkedin.com/img/webpromo/btn_myprofile_160x33.png" width="160" height="33" border="0" alt="View Alex Fuhr's profile on LinkedIn">
    </a>
</div>
<div id = "contentWrapper">
<div id = "content">
	<div id = "tabs">
		<ul>
			<li><a href = "#tabs-1">Blog</a></li>
			<li><a href = "#tabs-2">About Me</a></li>
			<li><a href = "#tabs-3">Projects</a></li>
			<li><a href = "#tabs-4">Resume</a></li>
		</ul>
		<div id = "tabs-1">
			<div class = "accordion">
				<h3>Post Title</h3>
				<div>
					<p>Post Content</p>
					<i>Posted on Date</i>
					</div>
			</div>
		</div>
		<div id = "tabs-2">
			<div class = "accordion">
				<h3>Bio</h3>
				<div>
					<p>Ever since I was young, I have always been eager to discover, learn, and make components of the world around me.</p><p>
The first experience I had close to my field was the creation of a Pok√©mon fan website in 2005. I first created this website using a site builder, then moved to creating and understanding each of the components behind it, from HTML, CSS, and and a PHP-based content management system. Most of my learning at this time was from trial and examples - I rarely understood the exact theory behind my work. I was able to maintain and update this website with content for several years, garnering many visitors over its lifespan.</p><p>
A few years later in middle school, I was faced with the question many times of what I wanted to do as a career with not much of an answer. Thinking the idea of creating robots sounded interesting, I joined my school's FIRST Lego League robotics team and I was instantly hooked. It was here I discovered that I really enjoyed working as a team faced with the task of solving problems with no simple answer. That same year I was finally able to put a name to it: engineering.</p><p>
I went through my high school years with the goal of preparing myself for a college engineering curriculum and finding out my interests within the field of engineering. The computer science courses that I took throughout this period helped me greatly with the latter goal, and I soon found myself participating in programming competitions, exploring data structures and algorithms, learning new languages, and working on coding projects in my spare time. It was from this experience and my continued experience on my schools FIRST Robotics Competition team that I decided to study computer engineering, for its hybrid of both electronic and software design, both things that I had explored and found myself equally interested in.</p><p>
Meanwhile, I had also participated greatly in my high school's band program as a trumpet player. From when I started playing in 2006, I strived to improve and participate as much as I could in music, appearing in many different honor bands, national competitions, and all-state groups. Even though I am pursuing a program in music, I still participate in ensembles at OSU today and credit music for developing my work ethic and leadership abilities.</p><p>
At The Ohio State University thus far I have strived to learn everything I can both inside and outside of class. Currently I am enrolled in the Fundamentals of Engineering for Honors program, in which I have completed projects in the C programming and participated in multidisciniplinary labs with other students and will create a robot as part of a team in the coming semester. Outside of class, I am broadening my knowledge in both hardware and software by working on projects involving Arduino, Raspberry Pi, and various programming languages, participating in clubs such as the Open Source Club and Engineers for a Sustainable World, going to events such as the Ohio Linuxfest and the OSU hackathon. Next semester, I plan to also assist with research at OSU by developing ImageJ plugins for the Ohio State's medical imaging department.</p>
				</div>
				<h3>What I Use</h3>
				<div>
					<p><table>
					<tr><td>Function</td><td>Tool</td></tr>
					<tr><td>Computer</td><td>Lenovo Ideapad Y500 (dual-booting Windows 8 and Ubuntu Studio)</td></tr>
					<tr><td>Tablet</td><td>Nexus 7</td></tr>
					<tr><td>Phone</td><td>HTC Inspire 4G</td></tr>
					<tr><td>C/C++ Editing</td><td>Emacs</td></tr>
					<tr><td>Website Editing</td><td>Bluefish (Linux), Notepad++ (Windows)</td></tr>
					<tr><td>Java Editing</td><td>Eclipse</td></tr>
					<tr><td>Arduino Editing</td><td>Arduino IDE</td></tr>
					<tr><td>Python Editing</td><td>IDLE</td></tr>
					</table></p>
				</div>
			</div>
		</div>
		<div id = "tabs-3">
			<div class = "accordion">
				<h3>Christmas Lighting, Arduino Style</h3>
				<div>
					<p>This project uses an Arduino to control both EL wire and an RGB (non-addressable) LED strip simultaneously. It also reads input from a potentiometer, two buttons, a PIR sensor, and displays text to an LCD screen. The wiring diagram is show below:<br>
					<img src = "images/christmaslights.png" width = "100%"><br>
					The source code for each program can be found <a href = "https://github.com/afuhrtrumpet/arduinochristmaslights">here</a>.<br>
					</p>
					<p>The first program does not utilize the buttons or LCD. It gradually fades the LED strip through the entire color spectrum and blinks the EL wire in an interval specified by the position of the potentiometer. After doing this for a certain amount of time, both components shut off to save power. They are reactivated when the PIR sensor detects motion.</p>
					<p>The second program performs similarly to the first program, but at the start it asks the user to input a sequence of colors by twisting the potentiometer to specify levels of red, green, and blue. After each color has been entered, the user can hit the bottom button to add another color or the top button to finish and start the sequence. Then, the EL wire performs as described in the first program while the LED strip switches between the user-defined sequence of colors in the same time interval the EL wire blinks. Both lights shut off after a certain period of time to wait for motion. The user can also press the top button during the light sequence to enter a new sequence of colors.</p>
					<p>
					I had my fair share of problems and issues during the implementation of this project. Here are some of the ones I solved along the way:
					<ul><li>The diode on the Arduino burned off due to a short circuit of the 12V power required to light the LED strip. I discovered that the other end of the strip connectors were also wired to ground, causing the short circuit.</li>
					<li>The Arduino could not supply the power required to control the LED strip or EL wire. To solve this, I used an relay to switch on and off the power of the 9V inverter to the EL wire and hooked a 12V power supply up to the Arduino and used N-channel MOSFETs to control the power.</li></ul>
					And some improvements that could still be made:
					<ul><li>Two potentiometers should be used: one to set the colors, and one to control the blink delay. In the current configuration, for example, if blue is set to 0 in the last color added and the user forgets to set the potentiometer back to a non-zero value, the blinking occurs faster than the relay can handle, causing a buzzing sound.</li>
					<li>The option to have the LED strip fade could still exist, or an option to have the strip fade between colors could be added.</li>
					<li>For some reason when setting colors, a low blue value makes the LED strip blink rapidly between a blue and non-blue color.</li>
					<li>The relay used to control the EL wire is noisy. Alternate control methods could be looked into for this.</li></ul>
					</p>
				</div>
				<h3>Web-Based Alarm Clock</h3>
				<div>
					<p>
					This project was created as a team of 4 for the OSU 2013 hackathon and can be found <a href = "https://github.com/afuhrtrumpet/OSUHackathon2013">here</a>.<br>
					In this Windows application. The user can customize an alarm clock sequence to read text or web data by adding modules and delays in a timeline. The modules included are weather, simple text, RSS, and calendar, but many more could be created simply by implementing the IModule interface. After that, they simply must be put into the project directory--no modification of any of the program files needed.</p>
					<p>Future goals for this project include porting it to mobile (where it really should belong, but no one on the team was experienced in mobile development) platforms such as Android and Windows Phone, as well as adding more modules and cleaning up the interface to be more user-friendly. The application could also take voice commands, which we considered adding at the hackathon but Microsoft's speech-to-text library included in C# was not accurate enough.</p>
					<p>Images shown below:<br>
  					<a href="images/alarmclockpics/initialscreen.png" data-lightbox="alarmclockpics" title="Initial screen"><img src="images/alarmclockpics/initialscreen.png" width="16%"/></a>
  					<a href="images/alarmclockpics/weathersetup.png" data-lightbox="alarmclockpics" title="Setting up a weather module"><img src="images/alarmclockpics/weathersetup.png" width="16%"/></a>
  					<a href="images/alarmclockpics/rsssetup.png" data-lightbox="alarmclockpics" title="Setting up an RSS module"><img src="images/alarmclockpics/rsssetup.png" width="16%"/></a>
  					<a href="images/alarmclockpics/clockadjust.png" data-lightbox="alarmclockpics" title="Adjusting the alarm time"><img src="images/alarmclockpics/clockadjust.png" width="16%"/></a>
  					<a href="images/alarmclockpics/clockplaying.png" data-lightbox="alarmclockpics" title="Playing the sequence of modules with a delay added"><img src="images/alarmclockpics/clockplaying.png" width="16%"/></a>
					</p>
				</div>
				<h3>IR Frequency Detector</h3>
				<div>
					<p>
						This project was created with another person for the first semester of Fundamentals of Engineering Honors at OSU and can be found <a href = "https://github.com/afuhrtrumpet/SDP">here.</a><br>
						The goal of this project was to detect one of 5 different possible frequencies using the FEH Proteus board and an IR receiver. The documentation is shown below:<br>
						<iframe id="viewer" src = "/Viewer.js/#../documents/SDP Documentation.odt" width='100%' height='400' allowfullscreen webkitallowfullscreen></iframe><br>
						(If you cannot see it in the viewer, you can download it in <a href = "documents/SDP Documentation.docx">Word format</a> or <a href = "documents/SDP Documentation.odt">open document format</a>)
					</p>
				</div>
				<h3>Refrigerator Calendar (in progress)</h3>
				<div>
					<p>The purpose of this project is to create a digital calendar that can read from Google Calendar and other web calendar services, designed to replace the traditional paper calendar on a refrigerator. Right now I am focusing solely on the software portion of it. Here is what the interface currently looks like:<br>
						<img src="images/fridge.png" width="100%"><br>
						Improvements that still need to be made:
						<ul>
							<li>Add support for recurring events.</li>
							<li>Add a setup screen.</li>
							<li>Use buttons rather than keyboard presses to change month when run on Raspberry Pi.</li>
							<li>Add graphical styling and options.</li>
						</ul>
						For protyping, the plan is to test on a Raspberry Pi.<br>
						The source for this project can be found <a href = "https://github.com/afuhrtrumpet/Python/tree/master/Graphical%20Google%20Calendar">here.</a>
					</p>
				</div>
				<h3>Musical Compositions</h3>
				<div>
					<p>Alongside engineering and programming projects, I also compose music.</p>
					<p>Here are the songs I made in Rytmik and Rytmik: Rock Edition (DSiWare applications):<br>
						<ul>
							<li>Doppler Jam:<br>
							Based entirely on the Doppler effect, this piece alternates between two keys a half step apart throughout its duration.<br>
							<iframe width="420" height="315" src="http://www.youtube.com/embed/M1dRnJB4Z-o" frameborder="0" allowfullscreen></iframe>
							</li>
							<li>Rock Variation on Camphouse's "A Movement for Rosa":<br>
							In this piece, I arranged many of the main themes and melodies of a wind band composition entitled "A Movement for Rosa" to fit with rock beats and rhythms. I tried to capture the original feel of the piece even in the transition to the new style.<br>
							<iframe width="420" height="315" src="http://www.youtube.com/embed/NiRbJnwzrEA" frameborder="0" allowfullscreen></iframe>
							</li>
							<li>Winter's Wonders:<br>
							This piece captures all the feelings of wonder, awe, and mystery associated with winter and snowfall, from the uncertain beginning all the way to the playful end.<br>
							<iframe width="420" height="315" src="http://www.youtube.com/embed/tiOScBZGxbI" frameborder="0" allowfullscreen></iframe>
							</li>
						</ul>					
					</p>
				</div>
			</div>
		</div>
		<div id = "tabs-4">
			<div class = "accordion">
				<h3>PDF Version</h3>
				<div>
					<p>
					<iframe id="viewer" src = "/Viewer.js/#../documents/resume.pdf" width='100%' height='400' allowfullscreen webkitallowfullscreen></iframe>
					</p>
				</div>
				<h3>HTML Version</h3>
				<div>
					<p>
					<iframe src = "documents/resume.html" width = "100%" height = '400'></iframe>
					</p>
				</div>
				<h3>Downloads</h3>
					<p>
						<a href = "documents/resume.pdf">PDF</a><br>
						<a href = "documents/resume.tex">LaTeX Source</a>
					</p>
			</div>
		</div>
	</div>
</div>
</div>
</body>
</html>
